{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2024/11/26/hello-world/"},{"title":"测试文章","text":"pagepagepagebird","link":"/2024/11/27/test/"},{"title":"toon_gttonemap","text":"一、前言1.1背景虚幻自带的Tonemap并不适合卡通渲染，如图，整个角色变得灰灰的 在网上冲浪时发现了一个叫Gran Turismo Tonemap的色调映射方法，是著名赛车游戏GT赛车提出来的一种的方法，它在值小于0.5的区间内近似为线性，使得修复图像过曝区域的同时也能保持颜色的饱和度，曲线如图 这篇文章记录一下我把ue自带的film(ACES)色调映射改为GT色调映射的心路历程，ue版本为5.3.2 1.2总览本文最终的效果为：在后处理体积盒添加一个选项用来切换film与GT色调映射 二、实现2.1 C++我选择在引擎里找一个相似的功能，然后跟着源码一步步添加，找了一下发现了这个TemperatureType作为参考对象非常合适，于是双击Shift搜索得到以下相关文件 首先Scene.h文件中声明了TemperatureType变量，类型为ETemperatureMethod枚举，我们有样学样照着写，此时直接编译的话ue就已经可以通过反射系统在后处理体积盒的Detail面板生成切换按钮，非常的方便，当然切换后是没有反应的，然后还有一个bOverride_TemperatureType变量这个也就是左边的勾选框了 在Scene.cpp中设置默认值，我这里设置默认值为film 接着来到SceneView.cpp文件，这里设置TemperatureType的参数覆盖方式，我们使用SET_PP宏，如果你添加的参数是浮点数那么就要使用线性插值宏 最后是PostProcessCombineLUTs.cpp文件，在这里TemperatureType被转换为uint32变量bIsTemperatureWhiteBalance传到FCombineLUTParameters结构体中，我们找到Shader参数结构体声明的地方加上自己的，然后传入值 至此C++部分就已经完成了，可以点击Build开始编译，接下来来到HLSL部分2.2 HLSL双击shift搜索bIsTemperatureWhiteBalance，可以看到在PostProcessCombineLUTs.usf，TonemapCommon.ush中有用到 在第一个文件中先声明参数变量然后在在下方传入WhiteBalance函数，此时我们往下翻一翻FilmToneMap就在这里 WhiteBalance和FilmToneMap的函数定义都位于TonemapCommon.ush中，我们也在这里定义GranTurismoTonemap,算法链接在ref中给出 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748//[Toon-Pipeline][Add-Begin] GT色调映射 step9float W_f(float x,float e0,float e1) { if (x &lt;= e0) return 0; if (x &gt;= e1) return 1; float a = (x - e0) / (e1 - e0); return a * a*(3 - 2 * a);}float H_f(float x, float e0, float e1) { if (x &lt;= e0) return 0; if (x &gt;= e1) return 1; return (x - e0) / (e1 - e0);}float GranTurismoTonemapper(float x) { float P = 1; float a = 1; float m = 0.22; float l = 0.4; float c = 1.33; float b = 0; float l0 = (P - m)*l / a; float L0 = m - m / a; float L1 = m + (1 - m) / a; float L_x = m + a * (x - m); float T_x = m * pow(x / m, c) + b; float S0 = m + l0; float S1 = m + a * l0; float C2 = a * P / (P - S1); float S_x = P - (P - S1)*pow(2.71828f,-(C2*(x-S0)/P)); float w0_x = 1 - W_f(x, 0, m); float w2_x = H_f(x, m + l0, m + l0); float w1_x = 1 - w0_x - w2_x; float f_x = T_x * w0_x + L_x * w1_x + S_x * w2_x; return f_x;}float3 GranTurismoToneMap(float3 LinearColor){ float r = GranTurismoTonemapper(LinearColor.r); float g = GranTurismoTonemapper(LinearColor.g); float b = GranTurismoTonemapper(LinearColor.b); return float3(r,g,b);}//[Toon-Pipeline][Add-End] 最后在第一个文件中根据TonemapType选择进入哪个tonemap函数. 编译着色器看看效果三、其他film色调映射有一组参数用于控制曲线，我现在没有需求就先不加了 reference:[1]GT Tonemap算法：https://www.desmos.com/calculator/gslcdxvipg?lang=zh-CN [2]如何在Unity URP中自定义ToneMapping:https://www.cnblogs.com/yaoling1997/p/16029385.html [3]剖析虚幻渲染体系（07）- 后处理https://www.cnblogs.com/timlly/p/15048404.html","link":"/2024/11/30/toon-gttonemap/"},{"title":"toon_hairprojection","text":"头发在面部的投影是卡通渲染中很常见的feature，这一feature可以很好地体现刘海的立体感 首先来看看我们将在渲染管线的哪一个阶段绘制头发投影，我选择在LightPass阶段","link":"/2024/11/29/toon-hairprojection/"}],"tags":[{"name":"tag_page","slug":"tag-page","link":"/tags/tag-page/"},{"name":"卡通渲染 , 渲染管线","slug":"卡通渲染-渲染管线","link":"/tags/%E5%8D%A1%E9%80%9A%E6%B8%B2%E6%9F%93-%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/"},{"name":"卡通渲染 , 渲染管线 , UnrealEngine","slug":"卡通渲染-渲染管线-UnrealEngine","link":"/tags/%E5%8D%A1%E9%80%9A%E6%B8%B2%E6%9F%93-%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF-UnrealEngine/"}],"categories":[{"name":"category_Test","slug":"category-Test","link":"/categories/category-Test/"},{"name":"卡渲","slug":"卡渲","link":"/categories/%E5%8D%A1%E6%B8%B2/"},{"name":"卡渲改管线","slug":"卡渲改管线","link":"/categories/%E5%8D%A1%E6%B8%B2%E6%94%B9%E7%AE%A1%E7%BA%BF/"}],"pages":[]}